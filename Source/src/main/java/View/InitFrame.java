package View;

import lombok.Getter;
import lombok.Setter;

import javax.swing.JOptionPane;

/**
 * The InitFrame class represents the initial screen where the user inputs their name and selects a difficulty level.
 * This frame allows the user to configure their game settings before starting the game.
 * 
 * @author Karol Pitera
 */

@Getter
@Setter
public class InitFrame extends javax.swing.JFrame {
    
    /**
     * The listener for the game start event. 
     * This listener triggers the game to start with the provided user name and difficulty level.
     */
    private ViewListener gameStartListener;
    
    /**
     * The name entered by the user.
     */
    private String name;
    
    /**
     * The selected difficulty level for the game.
     */
    private String difficultyLevel;

    /**
     * Constructor for the InitFrame. Initializes the components and centers the frame on the screen.
     * 
     * @param gameStartListener the listener that handles the game start event
     */
    public InitFrame(ViewListener gameStartListener) {
        initComponents();
        setLocationRelativeTo(null); // This will center the frame on the screen
        this.gameStartListener = gameStartListener;
    }

  /**
     * This method initializes the form components. Do not modify this code as it is auto-generated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelName = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        jLabelMessageLevel = new javax.swing.JLabel();
        choseLevelComboBox = new javax.swing.JComboBox<>();
        enterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabelName.setText("Type in your name: ");

        userName.setText("userName");

        jLabelMessageLevel.setText("Check difficulty level:");

        choseLevelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard", " " }));
        choseLevelComboBox.setToolTipText("");

        enterButton.setMnemonic('E');
        enterButton.setText("Enter");
        enterButton.setToolTipText("Set your choice");
        enterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMessageLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choseLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(enterButton)
                .addGap(0, 160, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelName)
                    .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMessageLevel)
                    .addComponent(choseLevelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(enterButton)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This method handles the action when the user presses the "Enter" button.
     * It retrieves the user's name and selected difficulty level, validates the inputs,
     * and opens the GameplayFrame if the inputs are valid.
     * 
     * @param evt the event triggered when the "Enter" button is pressed
     */
    private void enterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterButtonActionPerformed
        
    // Get the user input from text field and combo box
    name = userName.getText();  
    difficultyLevel = (String) choseLevelComboBox.getSelectedItem();  
    
    // Validate inputs
    if (name.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter your name.");
        
    } else {
       gameStartListener.onGameStart(name, difficultyLevel);
       this.dispose();  
    }
    }//GEN-LAST:event_enterButtonActionPerformed

    /**
     * Retrieves the name entered by the user.
     * 
     * @return the name entered by the user
     */
    public String downloadName() {
        return name;
    }
    
    /**
     * Retrieves the difficulty level selected by the user.
     * 
     * @return the difficulty level selected by the user
     */
    public String downloadDifficultyLevel() {
        return difficultyLevel;
    }
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Variables declaration - do not modify
    /**
    * JComboBox for selecting the difficulty level of the game.
    * This combo box allows the user to choose the level of difficulty before starting the game.
    */
    private javax.swing.JComboBox<String> choseLevelComboBox;
    /**
    * Button to submit the selected difficulty level and user name.
    * When clicked, this button proceeds to the gameplay screen.
    */
    private javax.swing.JButton enterButton;
    /**
    * Label to display the message "Level:" or related information.
    * This label is used for displaying the level message next to the selected difficulty combo box.
    */
    private javax.swing.JLabel jLabelMessageLevel;
    /**
    * Label to display the message "Name:" or related information.
    * This label shows the "Name" prompt before the user enters their name.
    */
    private javax.swing.JLabel jLabelName;
    /**
    * Text field for user input to enter their name.
    * This text field captures the player's name, which will be displayed in the gameplay window.
    */
    private javax.swing.JTextField userName;
    // End of variables declaration//GEN-END:variables
}
